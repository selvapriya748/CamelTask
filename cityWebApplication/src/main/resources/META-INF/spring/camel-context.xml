<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:camel="http://camel.apache.org/schema/spring"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd">

    <bean id="dataSource" class="oracle.jdbc.pool.OracleDataSource">
        <property name="user" value="s241oradev" />
        <property name="password" value="s241oradev" />
        <property name="URL" value="jdbc:oracle:thin:@//192.1.2.45:1521/elite19c" />
    </bean>

    <camelContext xmlns="http://camel.apache.org/schema/spring">

	<onException>
	    <exception>java.sql.SQLException</exception>
	    <handled>
	        <constant>true</constant>
	    </handled>
	    <log message="SQL Exception occurred: ${exception.message}" loggingLevel="ERROR"/>
	    <setBody>
	        <simple>{"status": "error", "message": "A database error occurred: ${exception.message}"}</simple>
	    </setBody>
	</onException>

      <onException>
          <exception>java.lang.Exception</exception>
          <handled>
              <constant>true</constant>
          </handled>
          <log message="An unexpected error occurred: ${exception.message}" loggingLevel="ERROR"/>
          <setBody>
              <simple>{"status": "error", "message": "An unexpected error occurred. Please try again later."}</simple>
          </setBody>
      </onException>

        <restConfiguration component="netty-http" bindingMode="json" host="0.0.0.0" port="8080">
        </restConfiguration>
   
        <rest path="/cities">
            <get>
                <param name="name" type="path" description="City name" dataType="string" required="true"/>
                <to uri="direct:getCities"/>
            </get>

            <post>
                <param name="body" type="body" description="City data" dataType="json" required="true"/>
                <to uri="direct:addCity"/>
            </post>

            <get path="/{name}">
                <param name="name" type="path" description="City name" dataType="string" required="true"/>
                <to uri="direct:getCityByName"/>
            </get>
            
            <put path="/{name}">
                <param name="name" type="path" description="City name" dataType="string" required="true"/>
                <param name="body" type="body" description="City data" dataType="json" required="true"/>
                <to uri="direct:updateCity"/>
            </put>
            
            <delete path="/{name}">
                <param name="name" type="path" description="City name" dataType="string" required="true"/>
                <to uri="direct:deleteCity"/>
            </delete>
            
        </rest>

        <route id="getCities">
            <from uri="direct:getCities"/>
            <doTry>
                <to uri="sql:SELECT * FROM Luca_Cities?dataSource=#dataSource"/>
                <to uri="log:Luca_Cities?level=INFO&amp;showAll=true" />
                <convertBodyTo type="java.util.List"/>
            
            <doCatch>
                <exception>java.sql.SQLException</exception>
                <log message="SQL error while fetching cities: ${exception.message}" loggingLevel="ERROR"/>
                <setBody>
                    <simple>{"status": "error", "message": "Failed to fetch cities"}</simple>
                </setBody>
            </doCatch>
            </doTry>
        </route>

        <route id="addCity">
            <from uri="direct:addCity"/>
            <doTry>
                <to uri="sql:INSERT INTO Luca_Cities (name, population) VALUES (:#name, :#population)?dataSource=#dataSource"/>
                <to uri="log:Luca_Cities?level=INFO&amp;showAll=true" />
                <setBody>
                    <simple>{"status": "City added successfully"}</simple>
                </setBody>
            <doCatch>
                <exception>java.sql.SQLException</exception>
                <log message="SQL error while adding city: ${exception.message}" loggingLevel="ERROR"/>
                <setBody>
                    <simple>{"status": "error", "message": "Failed to add city"}</simple>
                </setBody>
            </doCatch>
           </doTry>
            
        </route>
        
		<route id="updateCity">
		    <from uri="direct:updateCity"/>
		    <doTry>
		        <to uri="sql:UPDATE Luca_Cities SET population=:#population WHERE name=:#name?dataSource=#dataSource"/>
		        <to uri="log:Luca_Cities?level=INFO&amp;showAll=true"/>
		        <setBody>
		            <simple>{"status": "City updated successfully"}</simple>
		        </setBody>
		    
		    <doCatch>
		        <exception>java.sql.SQLException</exception>
		        <log message="SQL error while updating city: ${exception.message}" loggingLevel="ERROR"/>
		        <setBody>
		            <simple>{"status": "error", "message": "Failed to update city: ${exception.message}"}</simple>
		        </setBody>
		    </doCatch>
		    </doTry>
		</route>
		
		<route id="deleteCity">
		    <from uri="direct:deleteCity"/>
		    <doTry>
		        <to uri="sql:DELETE FROM Luca_Cities WHERE name=:#name?dataSource=#dataSource"/>
		        <to uri="log:Luca_Cities?level=INFO&amp;showAll=true"/>
		        <setBody>
		            <simple>{"status": "City deleted successfully"}</simple>
		        </setBody>
		    <doCatch>
		        <exception>java.sql.SQLException</exception>
		        <log message="SQL error while deleting city: ${exception.message}" loggingLevel="ERROR"/>
		        <setBody>
		            <simple>{"status": "error", "message": "Failed to delete city: ${exception.message}"}</simple>
		        </setBody>
		    </doCatch>
		   	</doTry>
		</route>
		
    </camelContext>
</beans>
